The Udaconnect application has been transformed from a monolithic to microservices architecture. The following three message-passing strategies have been used in the microservice architecture :

1. Kafka
2. gRPC
3. RESTFUL API endpoint


Refactoring Decisions and Justifications:

1. Person microservice uses the RESTFUL API message passing technique. This message-passing technique was used because it allows easy integration with various HTTP routes which is important for persons data.

2.  Connection microservice also uses the RESTFUL API message passing technique. This message-passing technique was used because of its simplicity and better maintainability.

3. location producer microservice and location consumer microservice use the gRPC and Kafka message passing technique.  At any instance, we will be ingesting a large volume of location data in the form of user coordinates from mobile devices, so I used the gRPC message passing technique due to its capability to provide improved performance, security, and strict type enforcement. Similarly to process the massive volume of simultaneously incoming location data, I used a Kafka message queue as it can process the data scalably without any loss.




